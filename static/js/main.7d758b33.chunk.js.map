{"version":3,"sources":["AffiliateComponents/Header.js","AffiliateComponents/Footer.js","AffiliateComponents/Table.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","title","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-labelledby","tabindex","aria-disabled","placeholder","Footer","useState","tempdata","setTempdata","finalData","setFinalData","useEffect","axios","require","method","url","headers","data","then","response","Data","AccessToken","catch","error","console","log","JSON","stringify","columns","field","options","search","filtering","exportButton","Table","name","age","App","state","users","Calls","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7d758b33.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header({title}) {\r\n    return (\r\n        <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport axios from 'axios'\r\nexport const Footer = () => {\r\n\r\n\r\n\r\n  const [tempdata,setTempdata] = useState([]);\r\n  const [finalData,setFinalData] = useState([]);\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n   \r\n    var axios = require('axios');\r\nvar data = '';\r\n\r\nvar config = {\r\n  method: 'post',\r\n   //url: 'http://localhost:51923/Api/Affiliate/AffDoctorPatientlist',\r\n  url:'https://welcomecure.com/DataProvider/API/Affiliate/AffDoctorPatientlist',\r\n\r\n  headers: { \r\n    'UserName': 'WelcomeWebApi', \r\n    'Password': 'welcomecure123', \r\n    'Authorization': 'Basic WDVPMFgxSDIwSWo3WjI2WXJhanowZGFpcmNpczczbnk3MjNmYzlUM3U3WktaTnZIaW5WbmNTbWt0V1FuM3BYQTdUd1hWZ2d6ckNkOlRVakxoTzVqNGFOM1V0bzYydDkzaHZ5ZDlNNktEUg=='\r\n  },\r\n  data : data\r\n};\r\n\r\naxios(config)\r\n.then(function (response) {\r\n  // console.log(JSON.stringify(response.data.Data.AccessToken));\r\n  setTempdata(response.data.Data.AccessToken)\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n});\r\n\r\n\r\n////doctor List\r\nvar axios = require('axios');\r\nvar data = JSON.stringify({\r\n  \"StartRow\": 0,\r\n  \"PageSize\": 100000,\r\n  \"SearchText1\": \"\",\r\n  \"SearchText2\": \"\",\r\n  \"SearchText3\":\"\",\r\n  \"SearchText4\":\"\",\r\n  \"_ContactType\":\"\",\r\n  \"UserId\": 1222290\r\n});\r\n\r\nvar config = {\r\n  method: 'post',\r\n  //url: 'http://localhost:51923/Api/Affiliate/AffDoctorPatientlist',\r\n  url: 'https://welcomecure.com/DataProvider/API/Affiliate/AffDoctorPatientlist',\r\n  headers: { \r\n    'Content-Type': 'application/json', \r\n    'UserName': 'WelcomeWebApi', \r\n    'Password': 'welcomecure123', \r\n    'AccessToken': {tempdata}\r\n  },\r\n  data : data\r\n};\r\n\r\naxios(config)\r\n.then(function (response) {\r\n  console.log(JSON.stringify(response.data));\r\n  setFinalData(response.data.Data)\r\n})\r\n.catch(function (error) {\r\n  console.log(error);\r\n});\r\n\r\n\r\n\r\n  }, [])\r\n  const columns=[\r\n    {title:\"Patient Name\",field:\"Name\"},\r\n    {title:\"Patient Reg No.\",field:\"PatientNo\"},\r\n    {title:\"Email Id\",field:\"EmailId\"},\r\n    {title:\"Mobile No.\",field:\"MobileNo\"}\r\n] \r\n    return(\r\n      <>\r\n      <MaterialTable\r\n            title=\"Doctor Patients List\"\r\n            data={finalData}\r\n            columns={columns}\r\n            options={{\r\n                search:true,\r\n                filtering:true,\r\n                exportButton:true\r\n            }}\r\n            />\r\n      \r\n      </>\r\n    )\r\n  \r\n\r\n  // const printData = finalData.map((i) => {\r\n  //   return(\r\n  //     <>\r\n  //     <table>\r\n  //       <tbody>\r\n  //       <tr>\r\n          \r\n  //         <td>{i.Name}  -- </td>\r\n  //         <td>{i.PatientNo} -- </td>\r\n  //         <td>{i.EmailId} </td>\r\n  //         <td>{i.MobileNo} </td>\r\n  //       </tr>\r\n  //       </tbody>\r\n        \r\n  //     </table> \r\n  //     </>\r\n  //   )\r\n  // })\r\n  \r\n\r\n\r\n\r\n   \r\n    \r\n\r\n\r\n\r\n//   return (\r\n//     // <div className=\"col-sm-6 offset-sm-3\">\r\n//     //   <h2 className=\"text-center\"> Fetch Data through Welcome Login</h2>\r\n// <>\r\n// <div>\r\n// <h1>Welcome Cure Affiliate Api Data</h1>\r\n// </div>\r\n//       <h6>{printData}</h6>\r\n// </>\r\n\r\n\r\n\r\n      \r\n      // <div ></div>\r\n      //{/* <button className=\"btn btn-primary\" onClick={loginfetch}> Login and Get Details</button> */}\r\n      //{/* <h1 className=\"text-center\">Fetch Data From Get Api Url</h1>\r\n      //   {\r\n      //     setDataApi.data123?\r\n      //     setDataApi.data123.map((item,i)=>\r\n      //     <div>\r\n      //       <p>{i}---\r\n      //       {item.CountryName} {item.CountryId}----\r\n      //       </p>\r\n      //     </div>\r\n      //     )\r\n      //     :null\r\n      //   }\r\n      //  */}\r\n    // </div>\r\n  // )\r\n}\r\n","import React from 'react'\r\nimport MaterialTable from 'material-table'\r\nexport const Table = () => {\r\n    const data=[\r\n        {name:\"Pratik\",age:22},\r\n        {name:\"john\",age:26},\r\n        {name:\"Balaram\",age:27}\r\n    ]\r\n    const columns=[\r\n        {title:\"Patient Name\",field:\"name\"},\r\n        {title:\"Age\",field:\"age\"}\r\n    ]\r\n    \r\n    return (\r\n        <div>\r\n            <MaterialTable\r\n            title=\"Patient List\"\r\n            data={data}\r\n            columns={columns}\r\n            options={{\r\n                search:true,\r\n                filtering:true,\r\n                exportButton:true\r\n            }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport  Header  from \"./AffiliateComponents/Header\";\nimport {Footer} from \"./AffiliateComponents/Footer\";\nimport {Table} from \"./AffiliateComponents/Table\";\nimport React, { Component } from 'react'\n//import { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom/cjs/react-dom.development';\n\nclass App extends Component {\n  constructor()\n  {\n    super()\n    this.state={\n      users:null,\n      Calls:null\n    }\n  }\n  componentDidMount(){\n\n  }\n  render() {\n    return (\n      <div>\n        <Header title=\"Affiliate Header\"/>\n        \n        <Footer/>\n        <Table/>\n        <h1 className=\"text-center\">Fetch Data From Get Api Url</h1>\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.register();\nserviceWorkerRegistration.register();\n//reportWebVitals();"],"sourceRoot":""}